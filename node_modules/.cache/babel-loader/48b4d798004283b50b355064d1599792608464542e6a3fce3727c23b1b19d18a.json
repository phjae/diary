{"ast":null,"code":"var _jsxFileName = \"/Users/hyunjaepark/Documents/practice/react-diary/src/OptimizeTest.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextView = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: text\n  }, void 0, false);\n};\n_c = TextView;\nconst CountView = _ref2 => {\n  let {\n    count\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: count\n  }, void 0, false);\n};\n_c2 = CountView;\nconst OptimizeTest = () => {\n  _s();\n  const [count, setCount] = useState(1);\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CountView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count + 1),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(OptimizeTest, \"dNtZfp4oyj4N/7iJZUhPAuJHtEE=\");\n_c3 = OptimizeTest;\nexport default OptimizeTest;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TextView\");\n$RefreshReg$(_c2, \"CountView\");\n$RefreshReg$(_c3, \"OptimizeTest\");","map":{"version":3,"names":["useState","Fragment","_Fragment","jsxDEV","_jsxDEV","TextView","_ref","text","children","_c","CountView","_ref2","count","_c2","OptimizeTest","_s","setCount","setText","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","_c3","$RefreshReg$"],"sources":["/Users/hyunjaepark/Documents/practice/react-diary/src/OptimizeTest.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst TextView = ({ text }) => {\n  return <>{text}</>;\n};\n\nconst CountView = ({ count }) => {\n  return <>{count}</>;\n};\nconst OptimizeTest = () => {\n  const [count, setCount] = useState(1);\n  const [text, setText] = useState(\"\");\n\n  return (\n    <div>\n      <div>\n        <h2>count</h2>\n        <CountView />\n        <button onClick={() => setCount(count + 1)}>+</button>\n      </div>\n      <div>\n        <h2>text</h2>\n        <TextView />\n        <input value={text} onChange={(e) => setText(e.target.value)} />\n      </div>\n    </div>\n  );\n};\n\nexport default OptimizeTest;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAGC,IAAA,IAAc;EAAA,IAAb;IAAEC;EAAK,CAAC,GAAAD,IAAA;EACxB,oBAAOF,OAAA,CAAAF,SAAA;IAAAM,QAAA,EAAGD;EAAI,iBAAI;AACpB,CAAC;AAACE,EAAA,GAFIJ,QAAQ;AAId,MAAMK,SAAS,GAAGC,KAAA,IAAe;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAD,KAAA;EAC1B,oBAAOP,OAAA,CAAAF,SAAA;IAAAM,QAAA,EAAGI;EAAK,iBAAI;AACrB,CAAC;AAACC,GAAA,GAFIH,SAAS;AAGf,MAAMI,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACH,KAAK,EAAEI,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACO,IAAI,EAAEU,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEpC,oBACEI,OAAA;IAAAI,QAAA,gBACEJ,OAAA;MAAAI,QAAA,gBACEJ,OAAA;QAAAI,QAAA,EAAI;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACdjB,OAAA,CAACM,SAAS;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACbjB,OAAA;QAAQkB,OAAO,EAAEA,CAAA,KAAMN,QAAQ,CAACJ,KAAK,GAAG,CAAC,CAAE;QAAAJ,QAAA,EAAC;MAAC;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClD,eACNjB,OAAA;MAAAI,QAAA,gBACEJ,OAAA;QAAAI,QAAA,EAAI;MAAI;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACbjB,OAAA,CAACC,QAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACZjB,OAAA;QAAOmB,KAAK,EAAEhB,IAAK;QAACiB,QAAQ,EAAGC,CAAC,IAAKR,OAAO,CAACQ,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACN,EAAA,CAlBID,YAAY;AAAAa,GAAA,GAAZb,YAAY;AAoBlB,eAAeA,YAAY;AAAC,IAAAL,EAAA,EAAAI,GAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAf,GAAA;AAAAe,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
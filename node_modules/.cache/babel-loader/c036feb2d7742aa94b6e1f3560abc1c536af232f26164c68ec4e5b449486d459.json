{"ast":null,"code":"var _jsxFileName = \"/Users/hyunjaepark/Documents/practice/react-diary/src/OptimizeTest.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CounterA = _ref => {\n  _s();\n  let {\n    count\n  } = _ref;\n  useEffect(() => {\n    console.log(`update :: count  : ${count}`);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: count\n  }, void 0, false);\n};\n_s(CounterA, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CounterA;\nconst CounterB = _ref2 => {\n  _s2();\n  let {\n    obj\n  } = _ref2;\n  useEffect(() => {\n    console.log(`update :: countB  : ${obj.count}`);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: obj.count\n  }, void 0, false);\n};\n_s2(CounterB, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = CounterB;\nconst OptimizeTest = () => {\n  _s3();\n  const [count, setCount] = useState(1);\n  const [obj, setObj] = useState({\n    count: 1\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"counter a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CounterA, {\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count),\n        children: \"a button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"counter b\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CounterB, {\n        obj: obj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setObj(obj.count),\n        children: \"b button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s3(OptimizeTest, \"vZo1jgdNurzSr6DCpkoVuEAZevg=\");\n_c3 = OptimizeTest;\nexport default OptimizeTest;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CounterA\");\n$RefreshReg$(_c2, \"CounterB\");\n$RefreshReg$(_c3, \"OptimizeTest\");","map":{"version":3,"names":["React","useEffect","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","CounterA","_ref","_s","count","console","log","children","_c","CounterB","_ref2","_s2","obj","_c2","OptimizeTest","_s3","setCount","setObj","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c3","$RefreshReg$"],"sources":["/Users/hyunjaepark/Documents/practice/react-diary/src/OptimizeTest.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst CounterA = ({ count }) => {\n  useEffect(() => {\n    console.log(`update :: count  : ${count}`);\n  });\n  return <>{count}</>;\n};\n\nconst CounterB = ({ obj }) => {\n  useEffect(() => {\n    console.log(`update :: countB  : ${obj.count}`);\n  });\n  return <>{obj.count}</>;\n};\nconst OptimizeTest = () => {\n  const [count, setCount] = useState(1);\n  const [obj, setObj] = useState({\n    count: 1,\n  });\n\n  return (\n    <div>\n      <div>\n        <h2>counter a</h2>\n        <CounterA count={count} />\n        <button onClick={() => setCount(count)}>a button</button>\n      </div>\n      <div>\n        <h2>counter b</h2>\n        <CounterB obj={obj} />\n        <button onClick={() => setObj(obj.count)}>b button</button>\n      </div>\n    </div>\n  );\n};\n\nexport default OptimizeTest;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGC,IAAA,IAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAF,IAAA;EACzBP,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,GAAG,CAAE,sBAAqBF,KAAM,EAAC,CAAC;EAC5C,CAAC,CAAC;EACF,oBAAOJ,OAAA,CAAAF,SAAA;IAAAS,QAAA,EAAGH;EAAK,iBAAI;AACrB,CAAC;AAACD,EAAA,CALIF,QAAQ;AAAAO,EAAA,GAARP,QAAQ;AAOd,MAAMQ,QAAQ,GAAGC,KAAA,IAAa;EAAAC,GAAA;EAAA,IAAZ;IAAEC;EAAI,CAAC,GAAAF,KAAA;EACvBf,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,GAAG,CAAE,uBAAsBM,GAAG,CAACR,KAAM,EAAC,CAAC;EACjD,CAAC,CAAC;EACF,oBAAOJ,OAAA,CAAAF,SAAA;IAAAS,QAAA,EAAGK,GAAG,CAACR;EAAK,iBAAI;AACzB,CAAC;AAACO,GAAA,CALIF,QAAQ;AAAAI,GAAA,GAARJ,QAAQ;AAMd,MAAMK,YAAY,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAM,CAACX,KAAK,EAAEY,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACgB,GAAG,EAAEK,MAAM,CAAC,GAAGrB,QAAQ,CAAC;IAC7BQ,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,oBACEJ,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,gBACEP,OAAA;QAAAO,QAAA,EAAI;MAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAClBrB,OAAA,CAACC,QAAQ;QAACG,KAAK,EAAEA;MAAM;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC1BrB,OAAA;QAAQsB,OAAO,EAAEA,CAAA,KAAMN,QAAQ,CAACZ,KAAK,CAAE;QAAAG,QAAA,EAAC;MAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrD,eACNrB,OAAA;MAAAO,QAAA,gBACEP,OAAA;QAAAO,QAAA,EAAI;MAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAClBrB,OAAA,CAACS,QAAQ;QAACG,GAAG,EAAEA;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACtBrB,OAAA;QAAQsB,OAAO,EAAEA,CAAA,KAAML,MAAM,CAACL,GAAG,CAACR,KAAK,CAAE;QAAAG,QAAA,EAAC;MAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACN,GAAA,CApBID,YAAY;AAAAS,GAAA,GAAZT,YAAY;AAsBlB,eAAeA,YAAY;AAAC,IAAAN,EAAA,EAAAK,GAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAX,GAAA;AAAAW,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
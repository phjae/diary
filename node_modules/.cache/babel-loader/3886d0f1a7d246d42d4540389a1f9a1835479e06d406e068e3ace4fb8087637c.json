{"ast":null,"code":"var _jsxFileName = \"/Users/hyunjaepark/Documents/practice/react-diary/src/OptimizeTest.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextView = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(_ref => {\n  _s();\n  let {\n    text\n  } = _ref;\n  useEffect(() => {\n    console.log(`update :: text  : ${text}`);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: text\n  }, void 0, false);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\")), \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = TextView;\nconst CountView = _ref2 => {\n  _s2();\n  let {\n    count\n  } = _ref2;\n  useEffect(() => {\n    console.log(`update :: count  : ${count}`);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: count\n  }, void 0, false);\n};\n_s2(CountView, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c3 = CountView;\nconst OptimizeTest = () => {\n  _s3();\n  const [count, setCount] = useState(1);\n  const [obj, setObj] = useState({\n    count: 1\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"counter a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count),\n        children: \"a button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextView, {\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s3(OptimizeTest, \"vZo1jgdNurzSr6DCpkoVuEAZevg=\");\n_c4 = OptimizeTest;\nexport default OptimizeTest;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"TextView$React.memo\");\n$RefreshReg$(_c2, \"TextView\");\n$RefreshReg$(_c3, \"CountView\");\n$RefreshReg$(_c4, \"OptimizeTest\");","map":{"version":3,"names":["React","useEffect","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","TextView","_s","memo","_c","_ref","text","console","log","children","_c2","CountView","_ref2","_s2","count","_c3","OptimizeTest","_s3","setCount","obj","setObj","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","setText","target","_c4","$RefreshReg$"],"sources":["/Users/hyunjaepark/Documents/practice/react-diary/src/OptimizeTest.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst TextView = React.memo(({ text }) => {\n  useEffect(() => {\n    console.log(`update :: text  : ${text}`);\n  });\n  return <>{text}</>;\n});\n\nconst CountView = ({ count }) => {\n  useEffect(() => {\n    console.log(`update :: count  : ${count}`);\n  });\n  return <>{count}</>;\n};\nconst OptimizeTest = () => {\n  const [count, setCount] = useState(1);\n  const [obj, setObj] = useState({\n    count: 1,\n  });\n\n  return (\n    <div>\n      <div>\n        <h2>counter a</h2>\n        <button onClick={() => setCount(count)}>a button</button>\n      </div>\n      <div>\n        <h2>text</h2>\n        <TextView text={text} />\n        <input value={text} onChange={(e) => setText(e.target.value)} />\n      </div>\n    </div>\n  );\n};\n\nexport default OptimizeTest;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,gBAAAC,EAAA,eAAGR,KAAK,CAACS,IAAI,CAAAC,EAAA,GAAAF,EAAA,CAACG,IAAA,IAAc;EAAAH,EAAA;EAAA,IAAb;IAAEI;EAAK,CAAC,GAAAD,IAAA;EACnCV,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAG,CAAE,qBAAoBF,IAAK,EAAC,CAAC;EAC1C,CAAC,CAAC;EACF,oBAAON,OAAA,CAAAF,SAAA;IAAAW,QAAA,EAAGH;EAAI,iBAAI;AACpB,CAAC,kCAAC;AAACI,GAAA,GALGT,QAAQ;AAOd,MAAMU,SAAS,GAAGC,KAAA,IAAe;EAAAC,GAAA;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAF,KAAA;EAC1BjB,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAG,CAAE,sBAAqBM,KAAM,EAAC,CAAC;EAC5C,CAAC,CAAC;EACF,oBAAOd,OAAA,CAAAF,SAAA;IAAAW,QAAA,EAAGK;EAAK,iBAAI;AACrB,CAAC;AAACD,GAAA,CALIF,SAAS;AAAAI,GAAA,GAATJ,SAAS;AAMf,MAAMK,YAAY,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAM,CAACH,KAAK,EAAEI,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACuB,GAAG,EAAEC,MAAM,CAAC,GAAGxB,QAAQ,CAAC;IAC7BkB,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,oBACEd,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,gBACET,OAAA;QAAAS,QAAA,EAAI;MAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAClBxB,OAAA;QAAQyB,OAAO,EAAEA,CAAA,KAAMP,QAAQ,CAACJ,KAAK,CAAE;QAAAL,QAAA,EAAC;MAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrD,eACNxB,OAAA;MAAAS,QAAA,gBACET,OAAA;QAAAS,QAAA,EAAI;MAAI;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACbxB,OAAA,CAACC,QAAQ;QAACK,IAAI,EAAEA;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACxBxB,OAAA;QAAO0B,KAAK,EAAEpB,IAAK;QAACqB,QAAQ,EAAGC,CAAC,IAAKC,OAAO,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACP,GAAA,CAnBID,YAAY;AAAAe,GAAA,GAAZf,YAAY;AAqBlB,eAAeA,YAAY;AAAC,IAAAZ,EAAA,EAAAM,GAAA,EAAAK,GAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAA5B,EAAA;AAAA4B,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAAjB,GAAA;AAAAiB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
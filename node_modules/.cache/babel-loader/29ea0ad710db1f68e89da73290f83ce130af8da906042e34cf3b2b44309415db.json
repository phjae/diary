{"ast":null,"code":"var _jsxFileName = \"/Users/hyunjaepark/Documents/practice/react-diary/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport DiaryEditor from \"./component/DiaryEditor/DiaryEditor\";\nimport DiaryList from \"./component/DiaryList/DiaryList\";\nimport React, { useCallback, useEffect, useMemo, useReducer, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"INIT\":\n      {\n        return action.data; //action에서 받은 데이터를 전달\n      }\n\n    case \"CREATE\":\n      {\n        const created_date = new Date().getTime();\n        const newItem = {\n          ...action.data,\n          created_date\n        };\n        return [newItem, ...state];\n      }\n    case \"DELETE\":\n      return state.filter(d => d.id !== action.targetId);\n    case \"EDIT\":\n      {\n        return state.map(d => d.id === action.targetId ? {\n          ...d,\n          contents: action.newContents\n        } : d);\n      }\n    default:\n      return state;\n  }\n};\nexport const DiaryStateContext = /*#__PURE__*/React.createContext();\nexport const DiaryDispatchContext = /*#__PURE__*/React.createContext();\nfunction App() {\n  _s();\n  //const [data, setData] = useState([]);\n  const [data, dispatch] = useReducer(reducer, []);\n  const dataId = useRef(0);\n  const getData = async () => {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/comments\").then(res => res.json());\n    const initData = res.slice(0, 10).map(it => {\n      return {\n        author: it.email,\n        contents: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime(),\n        id: dataId.current++\n      };\n    });\n    dispatch({\n      type: \"INIT\",\n      data: initData\n    });\n    //setData(initData);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  const onCreate = useCallback((author, contents, emotion) => {\n    dispatch({\n      type: \"CREATE\",\n      data: {\n        author,\n        contents,\n        emotion,\n        id: dataId.current\n      }\n    });\n    //const created_date = new Date().getTime();\n    // const newItem = {\n    //   author,\n    //   contents,\n    //   emotion,\n    //   created_date,\n    //   id: dataId.current,\n    // };\n    dataId.current += 1;\n    // setData((data) => [newItem, ...data]);\n  }, []);\n  const onEdit = useCallback((targetId, newContents) => {\n    // setData((data) =>\n    //   data.map((d) => (d.id === targetId ? { ...d, contents: newContents } : d))\n    // );\n    dispatch({\n      type: \"EDIT\",\n      targetId,\n      newContents\n    });\n  }, []);\n  const onDelete = useCallback(targetId => {\n    //setData((data) => data.filter((it) => it.id !== targetId));\n    dispatch({\n      type: \"DELETE\",\n      targetId\n    });\n  }, []);\n  const getDiaryAnalysis = useMemo(() => {\n    const goodCount = data.filter(it => it.emotion >= 3).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = goodCount / data.length * 100;\n    return {\n      goodCount,\n      badCount,\n      goodRatio\n    };\n  }, [data.length]);\n  const {\n    goodCount,\n    badCount,\n    goodRatio\n  } = getDiaryAnalysis;\n  const memoizedDispatches = useMemo(() => {\n    return {\n      onCreate,\n      onDelete,\n      onEdit\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DiaryStateContext.Provider, {\n    value: data,\n    children: /*#__PURE__*/_jsxDEV(DiaryDispatchContext.Provider, {\n      value: memoizedDispatches,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uC804\\uCCB4 \\uC77C\\uAE30: \", data.length, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uAE30\\uBD84 \\uC88B\\uC740 \\uC77C\\uAE30 \\uAC1C\\uC218: \", goodCount, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uAE30\\uBD84 \\uB098\\uC05C \\uC77C\\uAE30 \\uAC1C\\uC218: \", badCount, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uAE30\\uBD84 \\uC88B\\uC740 \\uC77C\\uAE30 \\uBE44\\uC728: \", goodRatio, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DiaryList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ae/XVpWOmMhN4xoXfCOP1i5TRqw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["DiaryEditor","DiaryList","React","useCallback","useEffect","useMemo","useReducer","useRef","jsxDEV","_jsxDEV","reducer","state","action","type","data","created_date","Date","getTime","newItem","filter","d","id","targetId","map","contents","newContents","DiaryStateContext","createContext","DiaryDispatchContext","App","_s","dispatch","dataId","getData","res","fetch","then","json","initData","slice","it","author","email","body","emotion","Math","floor","random","current","onCreate","onEdit","onDelete","getDiaryAnalysis","goodCount","length","badCount","goodRatio","memoizedDispatches","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hyunjaepark/Documents/practice/react-diary/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport DiaryEditor from \"./component/DiaryEditor/DiaryEditor\";\nimport DiaryList from \"./component/DiaryList/DiaryList\";\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n} from \"react\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"INIT\": {\n      return action.data; //action에서 받은 데이터를 전달\n    }\n    case \"CREATE\": {\n      const created_date = new Date().getTime();\n      const newItem = {\n        ...action.data,\n        created_date,\n      };\n      return [newItem, ...state];\n    }\n    case \"DELETE\":\n      return state.filter((d) => d.id !== action.targetId);\n    case \"EDIT\": {\n      return state.map((d) =>\n        d.id === action.targetId ? {...d, contents: action.newContents} : d\n      );\n    }\n    default:\n      return state;\n  }\n};\nexport const DiaryStateContext = React.createContext();\nexport const DiaryDispatchContext = React.createContext();\n\nfunction App() {\n  //const [data, setData] = useState([]);\n  const [data, dispatch] = useReducer(reducer, []);\n  const dataId = useRef(0);\n\n  const getData = async () => {\n    const res = await fetch(\n      \"https://jsonplaceholder.typicode.com/comments\"\n    ).then((res) => res.json());\n\n    const initData = res.slice(0, 10).map((it) => {\n      return {\n        author: it.email,\n        contents: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime(),\n        id: dataId.current++,\n      };\n    });\n    dispatch({type: \"INIT\", data: initData});\n    //setData(initData);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const onCreate = useCallback((author, contents, emotion) => {\n    dispatch({\n      type: \"CREATE\",\n      data: {author, contents, emotion, id: dataId.current},\n    });\n    //const created_date = new Date().getTime();\n    // const newItem = {\n    //   author,\n    //   contents,\n    //   emotion,\n    //   created_date,\n    //   id: dataId.current,\n    // };\n    dataId.current += 1;\n    // setData((data) => [newItem, ...data]);\n  }, []);\n\n  const onEdit = useCallback((targetId, newContents) => {\n    // setData((data) =>\n    //   data.map((d) => (d.id === targetId ? { ...d, contents: newContents } : d))\n    // );\n    dispatch({type: \"EDIT\", targetId, newContents});\n  }, []);\n\n  const onDelete = useCallback((targetId) => {\n    //setData((data) => data.filter((it) => it.id !== targetId));\n    dispatch({type: \"DELETE\", targetId});\n  }, []);\n\n  const getDiaryAnalysis = useMemo(() => {\n    const goodCount = data.filter((it) => it.emotion >= 3).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = (goodCount / data.length) * 100;\n    return {goodCount, badCount, goodRatio};\n  }, [data.length]);\n\n  const {goodCount, badCount, goodRatio} = getDiaryAnalysis;\n\n  const memoizedDispatches = useMemo(() => {\n    return {onCreate, onDelete, onEdit}\n  }, []);\n\n  return (\n    <DiaryStateContext.Provider value={data}>\n      <DiaryDispatchContext.Provider value={memoizedDispatches}>\n        <div className=\"App\">\n          <DiaryEditor />\n          <div>전체 일기: {data.length} </div>\n          <div>기분 좋은 일기 개수: {goodCount} </div>\n          <div>기분 나쁜 일기 개수: {badCount} </div>\n          <div>기분 좋은 일기 비율: {goodRatio} </div>\n          <DiaryList/>\n        </div>\n      </DiaryDispatchContext.Provider>\n    </DiaryStateContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}